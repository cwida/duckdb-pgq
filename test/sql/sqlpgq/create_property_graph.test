# name: test/sql/sqlpgq/create_property_graph.test
# group: [sqlpgq]

statement ok
pragma enable_verification

statement ok
CREATE TABLE Student(id BIGINT, name VARCHAR);

statement ok
CREATE TABLE know(src BIGINT, dst BIGINT, createDate BIGINT);

statement ok
CREATE TABLE School(school_name VARCHAR, school_id BIGINT, school_kind BIGINT);

statement ok
INSERT INTO Student VALUES (0, 'Daniel'), (1, 'Tavneet'), (2, 'Gabor'), (3, 'Peter');

statement ok
INSERT INTO know VALUES (0,1, 10), (0,2, 11), (0,3, 12), (1,2, 14), (1,3, 15), (2,3, 16);

# No properties keyword
statement ok
CREATE PROPERTY GRAPH pg_no_properties
VERTEX TABLES (
    Student                 LABEL Person,
    School  NO PROPERTIES   LABEL School IN School_kind (Hogeschool, University)
    )
EDGE TABLES (
    know    SOURCE KEY ( src ) REFERENCES Student ( id )
            DESTINATION KEY ( dst ) REFERENCES Student ( id )
            LABEL Knows
    )

# all properties
statement ok
CREATE PROPERTY GRAPH pg_all_properties
VERTEX TABLES (
    Student LABEL Person,
    School  LABEL School IN School_kind (Hogeschool, University)
    )
EDGE TABLES (
    know    SOURCE KEY ( src ) REFERENCES Student ( id )
            DESTINATION KEY ( dst ) REFERENCES Student ( id )
            LABEL Knows
    )


# ALL COLUMNS EXCEPT
statement ok
CREATE PROPERTY GRAPH pg_all_except_properties
VERTEX TABLES (
    Student                 LABEL Person,
    School  ALL COLUMNS EXCEPT (school_id)   LABEL School IN School_kind (Hogeschool, University)
    )
EDGE TABLES (
    know    SOURCE KEY ( src ) REFERENCES Student ( id )
            DESTINATION KEY ( dst ) REFERENCES Student ( id )
            LABEL Knows
    )



# vertex table with alias
statement ok
CREATE PROPERTY GRAPH pg
VERTEX TABLES (
    Student PROPERTIES ( id, name ) LABEL Person,
    School as school_alias PROPERTIES ( school_id, school_name) LABEL School IN School_kind (Hogeschool, University)
    )
EDGE TABLES (
    know    SOURCE KEY ( src ) REFERENCES Student ( id )
            DESTINATION KEY ( dst ) REFERENCES Student ( id )
            PROPERTIES ( createDate ) LABEL Knows
    )

# Error as property graph pg already exists
statement error
CREATE PROPERTY GRAPH pg
VERTEX TABLES (
    Student PROPERTIES ( id, name ) LABEL Person,
    School PROPERTIES ( school_id, school_name) LABEL School IN School_kind (Hogeschool, University)
    )
EDGE TABLES (
    know    SOURCE KEY ( src ) REFERENCES Student ( id )
            DESTINATION KEY ( dst ) REFERENCES Student ( id )
            PROPERTIES ( createDate ) LABEL Knows
    )

statement ok
CREATE PROPERTY GRAPH pg1
VERTEX TABLES (
    Student as Student_alias PROPERTIES ( id as id_alias, name ) LABEL Person
    )
EDGE TABLES (
    know    SOURCE KEY ( src ) REFERENCES Student ( id )
            DESTINATION KEY ( dst ) REFERENCES Student ( id )
            PROPERTIES ( createDate ) LABEL Knows
    )


# Missing the keyword IN between Person and Person_alias
statement error
CREATE PROPERTY GRAPH pg
VERTEX TABLES (
    Student PROPERTIES ( id as id, name ) LABEL Person Person_alias Person2_alias,
    )
EDGE TABLES (
    know    SOURCE KEY ( src ) REFERENCES Student ( id )
            DESTINATION KEY ( dst ) REFERENCES Student ( id )
            PROPERTIES ( createDate ) LABEL Knows
    )

# Duplicate labels
statement error
CREATE PROPERTY GRAPH pg2
VERTEX TABLES (
    Student PROPERTIES ( id, name ) LABEL Person,
    School as school_alias PROPERTIES ( school_id, school_name) LABEL School IN School_kind (University, Hogeschool, University)
    )
EDGE TABLES (
    know    SOURCE KEY ( src ) REFERENCES Student ( id )
            DESTINATION KEY ( dst ) REFERENCES Student ( id )
            PROPERTIES ( createDate ) LABEL Knows
    )

