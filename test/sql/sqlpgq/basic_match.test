# name: test/sql/sqlpgq/basic_match.test
# group: [sqlpgq]

statement ok
pragma enable_verification

statement ok
CREATE TABLE Student(id BIGINT, name VARCHAR);

statement ok
CREATE TABLE know(src BIGINT, dst BIGINT, createDate BIGINT);

statement ok
CREATE TABLE School(school_name VARCHAR, school_id BIGINT, school_kind BIGINT);

statement ok
INSERT INTO Student VALUES (0, 'Daniel'), (1, 'Tavneet'), (2, 'Gabor'), (3, 'Peter'), (4, 'David');

statement ok
INSERT INTO know VALUES (0,1, 10), (0,2, 11), (0,3, 12), (1,2, 14), (1,3, 15), (2,3, 16);

# vertex table with alias
statement ok
CREATE PROPERTY GRAPH pg
VERTEX TABLES (
    Student PROPERTIES ( id, name ) LABEL Person,
    School PROPERTIES ( school_id, school_name) LABEL School
    )
EDGE TABLES (
    know    SOURCE KEY ( src ) REFERENCES Student ( id )
            DESTINATION KEY ( dst ) REFERENCES Student ( id )
            PROPERTIES ( createDate ) LABEL Knows
    )


query I
SELECT study.id
FROM GRAPH_TABLE (pg,
    MATCH
    (a:Person)
    COLUMNS (a.id)
    ) study
----
0
1
2
3
4

query II
SELECT study.a_id, study.name
FROM GRAPH_TABLE (pg,
    MATCH
    (a:Person)
    WHERE a.id = 0
    COLUMNS (a.id as a_id, a.name)
    ) study
----
0	Daniel

#query II
#SELECT study.a, study.name
#FROM GRAPH_TABLE (pg,
#    MATCH
#    (a:Person)-[k:Knows]->(b:Person)
#    WHERE a.id = 0
#    COLUMNS (a.id as a_id, a.name)
#    ) study
#----
#0	Daniel

