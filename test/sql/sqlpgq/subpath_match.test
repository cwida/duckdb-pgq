# name: test/sql/sqlpgq/subpath_match.test
# group: [sqlpgq]

require sqlpgq

statement ok
CREATE TABLE Student(id BIGINT, name VARCHAR);

statement ok
CREATE TABLE know(src BIGINT, dst BIGINT, id BIGINT);

statement ok
CREATE TABLE School(school_name VARCHAR, school_id BIGINT, school_kind BIGINT);

statement ok
INSERT INTO Student VALUES (0, 'Daniel'), (1, 'Tavneet'), (2, 'Gabor'), (3, 'Peter'), (4, 'David');

statement ok
INSERT INTO know VALUES (0,1, 10), (0,2, 11), (0,3, 12), (3,0, 13), (1,2, 14), (1,3, 15), (2,3, 16), (4,3, 17), (2, 4, 18);

statement ok
CREATE PROPERTY GRAPH pg
VERTEX TABLES (
    Student PROPERTIES ( id, name ) LABEL Person
    )
EDGE TABLES (
    know    SOURCE KEY ( src ) REFERENCES Student ( id )
            DESTINATION KEY ( dst ) REFERENCES Student ( id )
            PROPERTIES ( id ) LABEL Knows
    );

query II
SELECT study.a_id, study.name
FROM GRAPH_TABLE (pg,
    MATCH
    (a:Person WHERE a.id = 0)
    COLUMNS (a.id as a_id, a.name)
    ) study
----
0	Daniel

query II
SELECT study.a_id, study.b_id
FROM GRAPH_TABLE (pg,
    MATCH
    (a:Person)-[k:Knows WHERE k.id = 10]->(b:Person)
    COLUMNS (a.id as a_id, b.id as b_id)
    ) study
----
0	1

query II
WITH cte1 AS (
    SELECT  CREATE_CSR_EDGE(
            0,
            (SELECT count(a.id) FROM Student a),
            CAST (
                (SELECT sum(CREATE_CSR_VERTEX(
                            0,
                            (SELECT count(a.id) FROM Student a),
                            sub.dense_id,
                            sub.cnt)
                            )
                FROM (
                    SELECT a.rowid as dense_id, count(k.src) as cnt
                    FROM Student a
                    LEFT JOIN Know k ON k.src = a.id
                    GROUP BY a.rowid) sub
                )
            AS BIGINT),
            a.rowid,
            c.rowid,
            k.rowid) as temp
    FROM Know k
    JOIN student a on a.id = k.src
    JOIN student c on c.id = k.dst
) SELECT distinct a.name AS a_name, b.name AS b_name,
FROM cte1, Student a, Student b
    WHERE a.name = 'Peter'
    and ((cte1.temp * 0) + iterativelength(0, (SELECT count(c.id) FROM Student c), a.rowid, b.rowid)) NOT NULL
----
Peter	Daniel
Peter	Tavneet
Peter	Gabor
Peter	Peter
Peter	David


query II
SELECT study.a_name, study.b_name
FROM GRAPH_TABLE (pg,
    MATCH
    (a:Person)-[k:Knows]-> *(b:Person)
    WHERE a.name = 'Peter'
    COLUMNS (a.name as a_name, b.name as b_name)
    ) study
----
Peter	Daniel
Peter	Tavneet
Peter	Gabor
Peter	Peter
Peter	David

query II
SELECT study.a_name, study.b_name
FROM GRAPH_TABLE (pg,
    MATCH
    (a:Person)-[k:Knows]->{1,2}(b:Person)
    WHERE a.name = 'Peter'
    COLUMNS (a.name as a_name, b.name as b_name)
    ) study
----
Peter	Daniel
Peter	Tavneet
Peter	Gabor

query II
SELECT study.a_name, study.b_name
FROM GRAPH_TABLE (pg,
    MATCH
    (a:Person)-[k:Knows]-> +(b:Person)
    WHERE a.name = 'Peter'
    COLUMNS (a.name as a_name, b.name as b_name)
    ) study
----
Peter	Daniel
Peter	Tavneet
Peter	Gabor
Peter	David